name: Main Foodgram workflow
'on':
  push:
    branches:
      - master

jobs:
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: 3.9
#      - name: Install flake8
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8
#      - name: Test with flake8
#        run:
#          python -m flake8 --config=backend/.flake8
#
#  build_backend_and_push_to_docker_hub:
#    name: Push Docker image to DockerHub
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: '${{ secrets.DOCKER_USERNAME }}'
#          password: '${{ secrets.DOCKER_PASSWORD }}'
#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          context: ./backend/
#          push: true
#          tags: '${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest'
#
#  build_frontend_and_push_to_docker_hub:
#    name: Push frontend Docker image to DockerHub
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker
#        uses: docker/login-action@v2
#        with:
#          username: '${{ secrets.DOCKER_USERNAME }}'
#          password: '${{ secrets.DOCKER_PASSWORD }}'
#      - name: Push to DockerHub
#        uses: docker/build-push-action@v4
#        with:
#          context: ./frontend/
#          push: true
#          tags: '${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest'

  deploy:
    runs-on: ubuntu-latest
#    needs:
#      - build_backend_and_push_to_docker_hub
#      - build_frontend_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
#      - name: Copy docker-compose.yml via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: '${{ secrets.HOST }}'
#          username: '${{ secrets.USER }}'
#          key: '${{ secrets.SSH_KEY }}'
#          passphrase: '${{ secrets.SSH_PASSPHRASE }}'
#          source: infra/docker-compose.production.yml
#          target: foodgram
#      - name: Copy docs via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: '${{ secrets.HOST }}'
#          username: '${{ secrets.USER }}'
#          key: '${{ secrets.SSH_KEY }}'
#          passphrase: '${{ secrets.SSH_PASSPHRASE }}'
#          source: docs
#          target: foodgram
#      - name: Copy deploy_data via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: '${{ secrets.HOST }}'
#          username: '${{ secrets.USER }}'
#          key: '${{ secrets.SSH_KEY }}'
#          passphrase: '${{ secrets.SSH_PASSPHRASE }}'
#          source: infra/deploy_data
#          target: foodgram
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: '${{ secrets.HOST }}'
          username: '${{ secrets.USER }}'
          key: '${{ secrets.SSH_KEY }}'
          passphrase: '${{ secrets.SSH_PASSPHRASE }}'
          script: |
            cd foodgram/infra
            echo
            "version: '3.3'

            volumes:
              pg_data:
              static:
              media:
            
            services:
              db:
                container_name: foodgram-db
                image: postgres:13
                env_file: .env
                volumes:
                  - pg_data:/var/lib/postgresql/data
            
              frontend:
                container_name: foodgram-front
                image: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
                volumes:
                  - ./frontend/:/app/result_build/
            
              backend:
                container_name: foodgram-back
                image: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
                env_file: .env
                volumes:
                  - static:/app/collected_static/
                  - media:/app/media/
                depends_on:
                  - db
            
              nginx:
                container_name: foodgram-gateway
                image: nginx:1.19.3
                ports:
                  - "80:80"
                volumes:
                  - ./nginx.conf:/etc/nginx/conf.d/default.conf
                  - ./frontend/build:/usr/share/nginx/html/
                  - ../docs/:/usr/share/nginx/html/api/docs/
                  - static:/var/html/static/
                  - media:/var/html/media/
                depends_on:
                  - db
                  - backend" | tee docker-compose.production.yml
            
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: '${{ secrets.TELEGRAM_TO }}'
          token: '${{ secrets.TELEGRAM_TOKEN }}'
          message: >-
            Деплой успешно выполнен! ${{ github.server_url }}/${{
            github.repository }}/actions/runs/${{ github.run_id }}
